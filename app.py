import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import RandomForestClassifier

st.set_page_config(layout="wide", page_title="–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã", page_icon="üå§Ô∏è")
st.markdown("""
### ‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

- **Temperature** *(–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞)*: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è.
- **Humidity** *(–í–ª–∞–∂–Ω–æ—Å—Ç—å)*: –ü—Ä–æ—Ü–µ–Ω—Ç –≤–ª–∞–∂–Ω–æ—Å—Ç–∏.
- **Wind Speed** *(–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞)*: –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –∫–º/—á.
- **Precipitation (%)** *(–û—Å–∞–¥–∫–∏)*: –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Å–∞–¥–∫–æ–≤.
- **Cloud Cover** *(–û–±–ª–∞—á–Ω–æ—Å—Ç—å)*: –ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±–ª–∞—á–Ω–æ–≥–æ –ø–æ–∫—Ä–æ–≤–∞.
- **Atmospheric Pressure** *(–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ)*: –î–∞–≤–ª–µ–Ω–∏–µ –≤ –≥–µ–∫—Ç–æ–ø–∞—Å–∫–∞–ª—è—Ö (hPa).
- **UV Index** *(–£–§-–∏–Ω–¥–µ–∫—Å)*: –ò–Ω–¥–µ–∫—Å —É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è.
- **Season** *(–°–µ–∑–æ–Ω)*: –°–µ–∑–æ–Ω, –≤–æ –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª–∏ —Å–æ–±—Ä–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ.
- **Visibility (km)** *(–í–∏–¥–∏–º–æ—Å—Ç—å)*: –í–∏–¥–∏–º–æ—Å—Ç—å –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö.
- **Location** *(–õ–æ–∫–∞—Ü–∏—è)*: –¢–∏–ø –º–µ—Å—Ç–Ω–æ—Å—Ç–∏, –≥–¥–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å –∏–∑–º–µ—Ä–µ–Ω–∏—è.
- **Weather Type** *(–¢–∏–ø –ø–æ–≥–æ–¥—ã)*: –¶–µ–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∏–ø –ø–æ–≥–æ–¥—ã –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.
""")

st.title("üìö –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã —Å –ø–æ–º–æ—â—å—é ML")
st.write("–≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∏–ø –ø–æ–≥–æ–¥—ã –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤–≤–µ–¥–µ—Ç–µ")

df = pd.read_csv("weather_clean.csv")
df = df.dropna()

st.subheader("–î–∞–Ω–Ω—ã–µ")
st.write(df.head())

st.subheader("–ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –ø–æ–≥–æ–¥—ã")
fig, ax = plt.subplots(figsize=(6, 3))
sns.countplot(x="Weather Type", data=df, ax=ax)
plt.xticks(rotation=30)
st.pyplot(fig)

# –ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
y = df["Weather Type"]
X = df.drop("Weather Type", axis=1)
X = pd.get_dummies(X)

#MO
model = RandomForestClassifier()
model.fit(X, y)

st.sidebar.header("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")

input_dict = {}
for col in df.columns:
    if col == "Weather Type":
        continue
    if df[col].dtype == "object":
        val = st.sidebar.selectbox(col, df[col].unique())
        for dcol in pd.get_dummies(df[[col]]).columns:
            input_dict[dcol] = 1 if dcol == f"{col}_{val}" else 0
    else:
        val = st.sidebar.slider(col, float(df[col].min()), float(df[col].max()), float(df[col].mean()))
        input_dict[col] = val

user_data = pd.DataFrame([input_dict])
user_data = user_data.reindex(columns=X.columns, fill_value=0)

pred = model.predict(user_data)[0]
probs = model.predict_proba(user_data)[0]
labels = model.classes_

st.subheader("–í–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
st.write(user_data)

st.subheader("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ")
st.write("–¢–∏–ø –ø–æ–≥–æ–¥—ã –±—É–¥–µ—Ç:", pred)

st.subheader("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏")
st.write(pd.DataFrame([probs], columns=labels))
